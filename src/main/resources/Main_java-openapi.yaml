openapi: "3.0.3"
info:
  title: "Main_java API"
  description: "Main_java API"
  version: "1.0.0"
servers:
  - url: "https://Main_java"
paths:
  /:
    get:
      summary: "GET "
      operationId: "index"
      responses:
        "200":
          description: "OK"
          content:
            '*/*':
              schema:
                type: "string"
  /users/{userId}:
    put:
      summary: "PUT users/{userId}"
      operationId: "updateUser"
      parameters:
        - name: "userId"
          in: "path"
          required: true
          schema:
            type: "integer"
            format: "int32"
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/UserRequestDto"
        required: true
      responses:
        "200":
          description: "OK"
          content:
            '*/*':
              schema:
                $ref: "#/components/schemas/UserResponseDto"
    delete:
      summary: "DELETE users/{userId}"
      operationId: "deleteUser"
      parameters:
        - name: "userId"
          in: "path"
          required: true
          schema:
            type: "integer"
            format: "int32"
      responses:
        "200":
          description: "OK"
          content:
            '*/*':
              schema:
                type: "object"
    get:
      summary: "GET users/{userId}"
      operationId: "getUserById"
      parameters:
        - name: "userId"
          in: "path"
          required: true
          schema:
            type: "integer"
            format: "int32"
      responses:
        "200":
          description: "OK"
          content:
            '*/*':
              schema:
                $ref: "#/components/schemas/UserResponseDto"
  /users:
    post:
      summary: "POST users"
      operationId: "createUser"
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/UserRequestDto"
        required: true
      responses:
        "201":
          description: "Created"
          content:
            '*/*':
              schema:
                $ref: "#/components/schemas/UserResponseDto"
    get:
      summary: "GET users"
      operationId: "getUsers"
      responses:
        "200":
          description: "OK"
          content:
            '*/*':
              schema:
                type: "array"
                items:
                  $ref: "#/components/schemas/UserResponseDtoShort"
  /users/{userId}/groups/{groupId}:
    post:
      summary: "POST users/{userId}/groups/{groupId}"
      operationId: "addUserToGroup"
      parameters:
        - name: "userId"
          in: "path"
          required: true
          schema:
            type: "integer"
            format: "int32"
        - name: "groupId"
          in: "path"
          required: true
          schema:
            type: "integer"
            format: "int32"
      responses:
        "201":
          description: "Created"
          content:
            '*/*':
              schema:
                $ref: "#/components/schemas/UserResponseDto"
    delete:
      summary: "DELETE users/{userId}/groups/{groupId}"
      operationId: "deleteUserToGroup"
      parameters:
        - name: "userId"
          in: "path"
          required: true
          schema:
            type: "integer"
            format: "int32"
        - name: "groupId"
          in: "path"
          required: true
          schema:
            type: "integer"
            format: "int32"
      responses:
        "200":
          description: "OK"
          content:
            '*/*':
              schema:
                $ref: "#/components/schemas/UserResponseDto"
  /groups/{groupId}:
    put:
      summary: "PUT groups/{groupId}"
      operationId: "updateGroup"
      parameters:
        - name: "groupId"
          in: "path"
          required: true
          schema:
            type: "integer"
            format: "int32"
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/GroupRequestDto"
        required: true
      responses:
        "200":
          description: "OK"
          content:
            '*/*':
              schema:
                $ref: "#/components/schemas/GroupResponseDto"
    delete:
      summary: "DELETE groups/{groupId}"
      operationId: "deleteGroupById"
      parameters:
        - name: "groupId"
          in: "path"
          required: true
          schema:
            type: "integer"
            format: "int32"
      responses:
        "200":
          description: "OK"
          content:
            '*/*':
              schema:
                type: "object"
    get:
      summary: "GET groups/{groupId}"
      operationId: "getGroupById"
      parameters:
        - name: "groupId"
          in: "path"
          required: true
          schema:
            type: "integer"
            format: "int32"
      responses:
        "200":
          description: "OK"
          content:
            '*/*':
              schema:
                $ref: "#/components/schemas/GroupResponseDto"
  /groups:
    post:
      summary: "POST groups"
      operationId: "creatGroup"
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/GroupRequestDto"
        required: true
      responses:
        "201":
          description: "Created"
          content:
            '*/*':
              schema:
                $ref: "#/components/schemas/GroupResponseDto"
    get:
      summary: "GET groups"
      operationId: "getGroups"
      responses:
        "200":
          description: "OK"
          content:
            '*/*':
              schema:
                type: "array"
                items:
                  $ref: "#/components/schemas/GroupResponseDtoShort"
  /groups/paid:
    get:
      summary: "GET groups/paid"
      operationId: "getPaidGroups"
      responses:
        "200":
          description: "OK"
          content:
            '*/*':
              schema:
                type: "array"
                items:
                  $ref: "#/components/schemas/PaidGroupResponseDtoShort"
components:
  schemas:
    UserRequestDto:
      type: "object"
      properties:
        firstName:
          type: "string"
        lastName:
          type: "string"
    GroupResponseDtoShort:
      type: "object"
      properties:
        id:
          type: "integer"
          format: "int32"
        name:
          type: "string"
        description:
          type: "string"
    UserResponseDto:
      type: "object"
      properties:
        id:
          type: "integer"
          format: "int32"
        firstName:
          type: "string"
        lastName:
          type: "string"
        groups:
          type: "array"
          items:
            $ref: "#/components/schemas/GroupResponseDtoShort"
    UserResponseDtoShort:
      type: "object"
      properties:
        id:
          type: "integer"
          format: "int32"
        firstName:
          type: "string"
        lastName:
          type: "string"
    GroupRequestDto:
      type: "object"
      properties:
        name:
          type: "string"
        description:
          type: "string"
    GroupResponseDto:
      type: "object"
      properties:
        id:
          type: "integer"
          format: "int32"
        name:
          type: "string"
        description:
          type: "string"
        users:
          type: "array"
          items:
            $ref: "#/components/schemas/UserResponseDtoShort"
    PaidGroupResponseDtoShort:
      type: "object"
      properties:
        id:
          type: "integer"
          format: "int32"
        name:
          type: "string"
        description:
          type: "string"
        cost:
          type: "integer"
          format: "int32"